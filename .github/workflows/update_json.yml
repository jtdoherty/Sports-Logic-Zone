name: Update JSON Files

on:
  schedule:
    - cron: '*/30 * * * *'  # This runs the action every 30 minutes
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write  # Give write permissions for pushing changes

jobs:
  update_json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for .GitInfo and .Lastmod

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas PyGithub  # Add other dependencies if needed

      - name: Run first script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY2 }}  # Your custom RapidAPI Key secret
        run: python odds_data_webpage_api_code.py  # Your first script

      - name: Run second script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub
          RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY1 }}  # Your custom RapidAPI Key secret
        run: python arbitrage_research_api.py  # Your second script

      - name: Commit and push changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add output7.json filtered_data.json  # Replace with your actual output file names
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update JSON data [skip ci]" && git push)
